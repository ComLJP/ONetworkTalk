// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OServerContract.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ONetworkTalk.Contract {

  /// <summary>Holder for reflection information generated from OServerContract.proto</summary>
  public static partial class OServerContractReflection {

    #region Descriptor
    /// <summary>File descriptor for OServerContract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OServerContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVPU2VydmVyQ29udHJhY3QucHJvdG8SE09TZXJ2ZXJMaWIuQ29udHJhY3Qi",
            "OgoNTG9naW5Db250cmFjdBILCgNVaWQYASABKAkSCwoDUHdkGAIgASgJEg8K",
            "B1ZlckNvZGUYAyABKAkiNgoTTG9naW5SZXN1bHRDb250cmFjdBIOCgZSZXN1",
            "bHQYASABKBESDwoHRmFpbHVyZRgCIAEoCSJXCgxCbG9iQ29udHJhY3QSDgoG",
            "SXNMYXN0GAEgASgIEg4KBkJsb2JJRBgCIAEoERIVCg1GcmFnbWVudEluZGV4",
            "GAMgASgREhAKCEZyYWdtZW50GAQgASgMIh4KC0NoYXRDb250ZW50Eg8KB0Nv",
            "bnRlbnQYASABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ONetworkTalk.Contract.LoginContract), global::ONetworkTalk.Contract.LoginContract.Parser, new[]{ "Uid", "Pwd", "VerCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ONetworkTalk.Contract.LoginResultContract), global::ONetworkTalk.Contract.LoginResultContract.Parser, new[]{ "Result", "Failure" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ONetworkTalk.Contract.BlobContract), global::ONetworkTalk.Contract.BlobContract.Parser, new[]{ "IsLast", "BlobID", "FragmentIndex", "Fragment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ONetworkTalk.Contract.ChatContent), global::ONetworkTalk.Contract.ChatContent.Parser, new[]{ "Content" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 登录 C-->S
  /// </summary>
  public sealed partial class LoginContract : pb::IMessage<LoginContract> {
    private static readonly pb::MessageParser<LoginContract> _parser = new pb::MessageParser<LoginContract>(() => new LoginContract());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ONetworkTalk.Contract.OServerContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginContract(LoginContract other) : this() {
      uid_ = other.uid_;
      pwd_ = other.pwd_;
      verCode_ = other.verCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginContract Clone() {
      return new LoginContract(this);
    }

    /// <summary>Field number for the "Uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    /// <summary>
    /// 用户名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Pwd" field.</summary>
    public const int PwdFieldNumber = 2;
    private string pwd_ = "";
    /// <summary>
    /// 密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VerCode" field.</summary>
    public const int VerCodeFieldNumber = 3;
    private string verCode_ = "";
    /// <summary>
    /// 验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VerCode {
      get { return verCode_; }
      set {
        verCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Pwd != other.Pwd) return false;
      if (VerCode != other.VerCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Pwd.Length != 0) hash ^= Pwd.GetHashCode();
      if (VerCode.Length != 0) hash ^= VerCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Pwd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pwd);
      }
      if (VerCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VerCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Pwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (VerCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VerCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginContract other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Pwd.Length != 0) {
        Pwd = other.Pwd;
      }
      if (other.VerCode.Length != 0) {
        VerCode = other.VerCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Pwd = input.ReadString();
            break;
          }
          case 26: {
            VerCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 登录结果
  /// </summary>
  public sealed partial class LoginResultContract : pb::IMessage<LoginResultContract> {
    private static readonly pb::MessageParser<LoginResultContract> _parser = new pb::MessageParser<LoginResultContract>(() => new LoginResultContract());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResultContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ONetworkTalk.Contract.OServerContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResultContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResultContract(LoginResultContract other) : this() {
      result_ = other.result_;
      failure_ = other.failure_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResultContract Clone() {
      return new LoginResultContract(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    /// 登录结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "Failure" field.</summary>
    public const int FailureFieldNumber = 2;
    private string failure_ = "";
    /// <summary>
    /// 失败原因
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Failure {
      get { return failure_; }
      set {
        failure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResultContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResultContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Failure != other.Failure) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Failure.Length != 0) hash ^= Failure.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(Result);
      }
      if (Failure.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Failure);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Result);
      }
      if (Failure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Failure);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResultContract other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Failure.Length != 0) {
        Failure = other.Failure;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Result = input.ReadSInt32();
            break;
          }
          case 18: {
            Failure = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// blob 分块发送
  /// </summary>
  public sealed partial class BlobContract : pb::IMessage<BlobContract> {
    private static readonly pb::MessageParser<BlobContract> _parser = new pb::MessageParser<BlobContract>(() => new BlobContract());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlobContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ONetworkTalk.Contract.OServerContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobContract(BlobContract other) : this() {
      isLast_ = other.isLast_;
      blobID_ = other.blobID_;
      fragmentIndex_ = other.fragmentIndex_;
      fragment_ = other.fragment_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobContract Clone() {
      return new BlobContract(this);
    }

    /// <summary>Field number for the "IsLast" field.</summary>
    public const int IsLastFieldNumber = 1;
    private bool isLast_;
    /// <summary>
    /// 是否是最后
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLast {
      get { return isLast_; }
      set {
        isLast_ = value;
      }
    }

    /// <summary>Field number for the "BlobID" field.</summary>
    public const int BlobIDFieldNumber = 2;
    private int blobID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlobID {
      get { return blobID_; }
      set {
        blobID_ = value;
      }
    }

    /// <summary>Field number for the "FragmentIndex" field.</summary>
    public const int FragmentIndexFieldNumber = 3;
    private int fragmentIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FragmentIndex {
      get { return fragmentIndex_; }
      set {
        fragmentIndex_ = value;
      }
    }

    /// <summary>Field number for the "Fragment" field.</summary>
    public const int FragmentFieldNumber = 4;
    private pb::ByteString fragment_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Fragment {
      get { return fragment_; }
      set {
        fragment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlobContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlobContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsLast != other.IsLast) return false;
      if (BlobID != other.BlobID) return false;
      if (FragmentIndex != other.FragmentIndex) return false;
      if (Fragment != other.Fragment) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsLast != false) hash ^= IsLast.GetHashCode();
      if (BlobID != 0) hash ^= BlobID.GetHashCode();
      if (FragmentIndex != 0) hash ^= FragmentIndex.GetHashCode();
      if (Fragment.Length != 0) hash ^= Fragment.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsLast != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsLast);
      }
      if (BlobID != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(BlobID);
      }
      if (FragmentIndex != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(FragmentIndex);
      }
      if (Fragment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Fragment);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsLast != false) {
        size += 1 + 1;
      }
      if (BlobID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BlobID);
      }
      if (FragmentIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FragmentIndex);
      }
      if (Fragment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Fragment);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlobContract other) {
      if (other == null) {
        return;
      }
      if (other.IsLast != false) {
        IsLast = other.IsLast;
      }
      if (other.BlobID != 0) {
        BlobID = other.BlobID;
      }
      if (other.FragmentIndex != 0) {
        FragmentIndex = other.FragmentIndex;
      }
      if (other.Fragment.Length != 0) {
        Fragment = other.Fragment;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsLast = input.ReadBool();
            break;
          }
          case 16: {
            BlobID = input.ReadSInt32();
            break;
          }
          case 24: {
            FragmentIndex = input.ReadSInt32();
            break;
          }
          case 34: {
            Fragment = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatContent : pb::IMessage<ChatContent> {
    private static readonly pb::MessageParser<ChatContent> _parser = new pb::MessageParser<ChatContent>(() => new ChatContent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ONetworkTalk.Contract.OServerContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatContent(ChatContent other) : this() {
      content_ = other.content_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatContent Clone() {
      return new ChatContent(this);
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatContent other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
